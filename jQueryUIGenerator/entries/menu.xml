<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../entries2html.xsl" ?>
<entry name="menu" namespace="fn" type="Widget" widgetnamespace="ui">
	<desc>
		Themeable menu with mouse and keyboard interactions for navigation.
	</desc>
	<longdesc>
		<p>A menu can be created from any valid markup as long as the elements have a strict parent/child relationship and each menu item has an anchor. The most commonly used element is the unordered list (UL):</p>

		<pre><![CDATA[
	<ul id="menu">
		<li><a href="#">Item 1</a></li>
		<li><a href="#">Item 2</a></li>
		<li><a href="#">Item 3</a>
			<ul>
				<li><a href="#">Item 3-1</a></li>
				<li><a href="#">Item 3-2</a></li>
				<li><a href="#">Item 3-3</a></li>
				<li><a href="#">Item 3-4</a></li>
				<li><a href="#">Item 3-5</a></li>
			</ul>
		</li>
		<li><a href="#">Item 4</a></li>
		<li><a href="#">Item 5</a></li>
	</ul>]]></pre>

		<p>If you use a structure other than UL/LI, including using the same element for the menu and the menu items, use the <code>menus</code> option to specify a way to differentiate the two elements, eg. <code>menus: 'div.menuElement'</code>.</p>

		<p>Any menu item can be disabled by adding the ui-state-disabled class to that element.</p>

		<p>This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point.</p>
	</longdesc>
	<created>1.9</created>
	<options>
		<option name="disabled" type="Boolean" default="false">
			<desc>Disables the menu if set to true.</desc>
		</option>
		<option name="menus" default="ul" type="String">
			<desc>Selector for the elements that serve as the menu container, including sub-menus.</desc>
		</option>
		<option name="position" type="Object" default="{ my: 'top left', at: 'top right' }">
			<desc>Using the Position utility, sets where the sub-menus will open in relation to the activated item in the parent menu.</desc>
		</option>
		<option name="role" type="String" default="menu">
			<desc>Customize the aria roles used for the menu and menu items. The default uses "menuitem" for items. Setting it to "listbox" will use "option" for items.</desc>
		</option>
	</options>
	<methods>
		<method name="blur">
			<desc>
				Remove focus from a menu, reset any active element styles and trigger the menu blur event.
			</desc>
			<argument name="event" type="Event" optional="true">
				<desc>What triggered the method.</desc>
			</argument>
		</method>
		<method name="collapse">
			<desc>
				Close the currently active sub-menu.
			</desc>
			<argument name="event" type="Event" optional="true">
				<desc>What triggered the method.</desc>
			</argument>
		</method>
		<method name="collapseAll">
			<desc>
				Close all open sub-menus.
			</desc>
			<argument name="event" type="Event" optional="true">
				<desc>What triggered the method.</desc>
			</argument>
			<argument name="all" type="Boolean" optional="true">
				<desc>Indicates whether all sub-menus should be closed or only sub-menus below and including the menu that is or contains the target of the triggering event.</desc>
			</argument>
		</method>
		<widget-inherit id="widget-destroy" />
		<widget-inherit id="widget-disable" />
		<widget-inherit id="widget-enable" />
		<method name="expand">
			<desc>
				Open the sub-menu below the currently active item, if it exists.
			</desc>
			<argument name="event" type="Event" optional="false">
				<desc>What triggered the method.</desc>
			</argument>
		</method>
		<method name="focus">
			<desc>
				Activate a particular menu item, begin opening any sub-menu if present and trigger the menu focus event.
			</desc>
			<argument name="event" type="Event" optional="false">
				<desc>What triggered the method.</desc>
			</argument>
			<argument name="item" type="jQuery" optional="false">
				<desc>The menu item to "activate".</desc>
			</argument>
		</method>
		<method name="isFirstItem">
			<desc>
				Returns a boolean value stating whether or not the currently active item is the first item in the menu.
			</desc>
		</method>
		<method name="isLastItem">
			<desc>
				Returns a boolean value stating whether or not the currently active item is the last item in the menu.
			</desc>
		</method>
		<method name="next">
			<desc>
				Move active state to next menu item.
			</desc>
			<argument name="event" type="Event" optional="true">
				<desc>What triggered the method.</desc>
			</argument>
		</method>
		<method name="nextPage">
			<desc>
				Move active state to first menu item below the bottom of a scrollable menu or the last item if not scrollable.
			</desc>
			<argument name="event" type="Event" optional="true">
				<desc>What triggered the method.</desc>
			</argument>
		</method>
		<widget-inherit id="widget-get-options" />
		<widget-inherit id="widget-get-option" />
		<widget-inherit id="widget-set-option" />
		<widget-inherit id="widget-set-options" />
		<method name="previous">
			<desc>
				Move active state to previous menu item.
			</desc>
			<argument name="event" type="Event" optional="true">
				<desc>What triggered the method.</desc>
			</argument>
		</method>
		<method name="previousPage">
			<desc>
				Move active state to first menu item above the top of a scrollable menu or the first item if not scrollable.
			</desc>
			<argument name="event" type="Event" optional="true">
				<desc>What triggered the method.</desc>
			</argument>
		</method>
		<method name="refresh">
			<desc>
				Initializes sub-menus and menu items that have not already been initialized. New menu items, including sub-menus can be added to the menu or all of the contents of the menu can be replaced and then initialized with the refresh method.
			</desc>
		</method>
		<method name="select">
			<desc>
				Select the currently active menu item, collapse all sub-menus and trigger the menu select event.
			</desc>
			<argument name="event" type="Event" optional="true">
				<desc>What triggered the method.</desc>
			</argument>
		</method>
		<widget-inherit id="widget-widget" />
	</methods>
	<events>
		<event name="blur" type="menublur">
			<desc>
				Triggered when the menu loses focus.
			</desc>
			<argument name="event" type="Event"></argument>
			<argument name="ui" type="Object">
				<desc>
					Extra event data for the ui menu blur event.
				</desc>
				<property name="item">
					<desc>
						The currently active menu item.
					</desc>
				</property>
			</argument>
		</event>
		<event name="create">
			<desc>
				This event is triggered when the menu is created.
			</desc>
			<argument name="event" type="Event">
			</argument>
			<argument name="ui" type="Object">
			</argument>
		</event>
		<event name="focus" type="menufocus">
			<desc>
				Triggered when a menu gains focus or when any menu item is activated via mouseover, click or keyboard interaction.
			</desc>
			<argument name="event" type="Event"></argument>
			<argument name="ui" type="Object">
				<desc>
					Extra event data for the ui menu focus event.
				</desc>
				<property name="item">
					<desc>
						The currently active menu item.
					</desc>
				</property>
			</argument>
		</event>
		<event name="select" type="menuselect">
			<desc>
				Triggered when a menu item is selected either via click or enter key.
			</desc>
			<argument name="event" type="Event"></argument>
			<argument name="ui" type="Object">
				<desc>
					Exra event data for the ui menu select event.
				</desc>
				<property name="item">
					<desc>
						The currently active menu item.
					</desc>
				</property>
			</argument>
		</event>
	</events>
	<!-- TODO wrap with 'examples'? -->
	<example>
        <desc>Initialize a menu with default options.</desc>
        <code>
	        $("#menu").menu();
		</code>
		<css>
<![CDATA[
	.ui-menu {
		width: 200px;
		margin-bottom: 2em;
		font-size:62.5%;
	}
]]>
		</css>
		<html>
	<![CDATA[
	<ul id="menu">
		<li><a href="#">Item 1</a></li>
		<li><a href="#">Item 2</a>
			<ul>
				<li><a href="#">Item 2-1</a></li>
			</ul>
		</li>
		<li><a href="#">Item 3</a></li>
	</ul>]]>
		</html>
	</example>
	<category slug="widgets"/>
</entry>
